pipeline {
    agent {
        kubernetes {
            yaml """
                apiVersion: v1
                kind: Pod
                spec:
                  containers:
                  - name: gradle
                    image: gradle
                    command:
                    - sleep
                    args:
                    - 99d
                    volumeMounts:
                    - name: shared-storage
                      mountPath: /mnt        
                  - name: kaniko
                    image: gcr.io/kaniko-project/executor:debug
                    command:
                    - sleep
                    args:
                    - 9999999
                    volumeMounts:
                    - name: shared-storage
                      mountPath: /mnt
                    - name: kaniko-secret
                      mountPath: /kaniko/.docker
                  restartPolicy: Never
                  volumes:
                  - name: shared-storage
                    persistentVolumeClaim:
                      claimName: jenkins-pv-claim
                  - name: kaniko-secret
                    secret:
                        secretName: dockercred
                        items:
                        - key: .dockerconfigjson
                          path: config.json
            """
        }
    }
    
    stages {

      stage('Checkout code and prepare environment') {
      steps {
        git url: 'https://github.com/bingbingkuai/chp5.git', branch: 'master'
        sh '''
          cd Chapter08/sample1
          chmod +x gradlew
        '''
      }
    }

    stage('Run pipeline against a gradle project - main branch') {
     // when {
     //  branch 'main'
     // }
      steps {
         echo 'On main branch'

          // A container should be created only if the tests succeed.
        // release: image name is "calculator"
        //release: version is 1.0

            container('gradle') {
                sh '''
                cd Chapter08/sample1
                    // sed -i 's/minimum = 0.2/minimum = 0.1/' build.gradle
                    // sed -i '/checkstyle {/,/}/d' build.gradle 
                    // sed -i '/checkstyle/d' build.gradle 
                    // cat build.gradle
                ./gradlew build
                ./gradlew test
                ./gradlew jacocoTestCoverageVerification
                mv ./build/libs/calculator-0.0.1-SNAPSHOT.jar /mnt
                '''
            }
      }
    }
    }

    post { 
        success {
            script{
                echo 'Create container repository'
                container('kaniko') {
                    sh '''
                    echo 'FROM openjdk:8-jre' > Dockerfile
                    echo 'COPY ./calculator-0.0.1-SNAPSHOT.jar app.jar' >> Dockerfile
                    echo 'ENTRYPOINT ["java", "-jar", "app.jar"]' >> Dockerfile
                    mv /mnt/calculator-0.0.1-SNAPSHOT.jar .
                    /kaniko/executor --context `pwd` --destination bingkuai8/hello-kaniko:1.0
                    '''
                }

            }
        }
    }

    
}
